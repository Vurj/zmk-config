/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick_tap_ms = <150>;
};

/ {
    behaviors {
        ht: hold_tap{
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        ttab: t_tab{
            compatible = "zmk,behavior-mod-morph";
            label = "T_TAB";
            #binding-cells = <0>;
            bindings = <&lt 1 T>, <&kp TAB>;
            mods = <MOD_LALT>;                
        };
    };
    
    /* Combo Placement
  ╭────────────────────────╮ ╭────────────────────────╮
  │  0   1   2   3   4   5 │ │  6   7   8   9  10  11 │
  │ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
  │ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
  ╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
              ╰────────────╯ ╰────────────╯*/

    combos {
        compatible = "zmk,combos";

        //Punctuation
        combo_sqt_grave{
            timeout-ms = <30>;
            key-positions = <15 16>;
            bindings = <&ht GRAVE SQT>;
            layers = <0>;
        };
        combo_dqt_at{
            timeout-ms = <30>;
            key-positions = <14 15>;
            bindings = <&ht DQT AT>;
            layers = <0>;
        };
        combo_colons{
            timeout-ms = <30>;
            key-positions = <14 16>;
            bindings = <&ht LS(SEMI) SEMI>;
            layers = <0>;
        }; 
        combo_comma_hash{
            timeout-ms = <30>;
            key-positions = <27 28>;
            bindings = <&ht NON_US_HASH COMMA>;
            layers = <0>;
        };
        combo_period_exca{
            timeout-ms = <30>;
            key-positions = <31 32>;
            bindings = <&ht EXCL DOT>;
            layers = <0>;
        };

        //functions
        combo_tab{
            timeout-ms = <30>;
            key-positions = <19 20>;
            bindings = <&kp TAB>;
            layers = <0>;
        };
        combo_esc{
            timeout-ms = <30>;
            key-positions = <20 21>;
            bindings = <&kp ESC>;
            layers = <0>;
        };
        combo_enter{
            timeout-ms = <30>;
            key-positions = <19 21>;
            bindings = <&kp ENTER>;
            layers = <0>;
        };

        //Brackets
        combo_paren{
            timeout-ms = <30>;
            key-positions = <3 4>;
            bindings = <&ht RPAR LPAR>;
            layers = <0>;
        };
        combo_brace{
            timeout-ms = <30>;
            key-positions = <2 3>;
            bindings = <&ht RBRC LBRC>;
            layers = <0>;
        };
        combo_brack{
            timeout-ms = <30>;
            key-positions = <2 4>;
            bindings = <&ht RBKT LBKT>;
            layers = <0>;
        };
    
        //Math
        combo_equals_under{
            timeout-ms = <30>;
            key-positions = <7 8>;
            bindings = <&ht UNDER EQUAL>;
            layers = <0>;
        };
        combo_plus_min{
            timeout-ms = <30>;
            key-positions = <8 9>;
            bindings = <&ht MINUS KP_PLUS>;
            layers = <0>;
        };
        combo_times_div{
            timeout-ms = <30>;
            key-positions = <7 9>;
            bindings = <&ht PRCNT STAR>;
            layers = <0>;
        };

        //Symbols
        combo_and_pipe{
            timeout-ms = <30>;
            key-positions = <3 16>;
            bindings = <&ht PIPE2 AMPS>;
            layers = <0>;
        };
        combo_money{
            timeout-ms = <30>;
            key-positions = <19 8>;
            bindings = <&ht LS(N3) DLLR>;
            layers = <0>;
        };
        combo_slashes{
            timeout-ms = <30>;
            key-positions = <31 33>;
            bindings = <&ht NON_US_BSLH FSLH>;
            layers = <0>;
        };
        combo_tilde_caret{
            timeout-ms = <30>;
            key-positions = <26 28>;
            bindings = <&ht CARET TILDE2>;
            layers = <0>;
        };


        //Layers
        combo_gaming{
            timeout-ms = <30>;
            key-positions = <17 18>;
            bindings = <&to 5>;
            layers = <0>;
        };
        combo_steno{
            timeout-ms = <30>;
            key-positions = <1 10>;
            bindings = <&to 6>;
            layers = <0>;
        };
        combo_game_esc{
            timeout-ms = <30>;
            key-positions = <26 27>;
            bindings = <&kp ESC>;
            layers = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
   &none  &none      &kp W      &kp F       &kp P     &none            &none &kp L &kp U       &kp Y        &none       &none 
   &none  &mt LGUI A &mt LALT R &mt LCTRL S &ttab     &kp G            &kp M &kp N &mt RCTRL E &mt RALT I   &mt RGUI O  &none 
   &none  &lt 4 Z    &kp X      &kp C       &kp D     &kp V            &kp K &kp H &kp B       &kp Q        &kp J       &none 
                                &none       &none     &mt LSHFT SPACE  &lt 2 LC(BSPC)     &none   &none
                        >;
                };
        num_layer {
                        bindings = <
   &none  &none    &none     &none     &none     &none              &none           &kp N7    &kp N8   &kp N9  &none          &none
   &none  &kp LGUI &kp LALT  &kp LCTRL &kp LSHFT &none              &ht DOT EQUAL   &kp N4    &kp N5   &kp N6  &kp N0        &none
   &none  &none    &none     &none     &none     &none              &ht MINUS PLUS  &kp N1    &kp N2   &kp N3  &ht PRCNT STAR &none
                             &none     &none     &none              &ht DEL BSPC    &none    &none
                        >;
                };
        nav_layer {
                        bindings = <
   &none &none    &none    &none     &none     &none                &none    &kp PG_DN &kp UP   &kp PG_UP &none        &none
   &none &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none                &kp HOME &kp LEFT  &kp DOWN &kp RIGHT &kp END      &none
   &none &none    &none    &none     &none     &none                &none    &kp LG(LS(LEFT)) &none     &kp LG(LS(RIGHT)) &kp LA(F4) &none
                           &none     &none &mt LSHFT SPACE          &none    &none     &none 
                        >;
                };
        mouse_layer {
                        bindings = <
   &none &none   &none   &none    &none    &none    &none   &none    &none   &none    &none  &none
   &none &none   &none   &none    &none    &none    &none   &none    &none   &none    &none  &none
   &none &none   &none   &none    &none    &none    &none   &none    &none   &none    &none  &none
                         &none    &none    &none    &none   &none    &none 
                        >;
                };
        btf_layer {
                        bindings = <
   &none &none        &none        &none        &none        &none          &none   &kp F7 &kp F8 &kp F9   &none     &none
   &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR     &kp F10 &kp F4 &kp F5 &kp F6   &kp F11   &none
   &none &bt BT_SEL 4 &none        &none        &none        &none          &none   &kp F1 &kp F2 &kp F3   &kp F12   &none
                                   &none        &none        &none          &none &none  &none
                        >;
                };
        gaming_layer {
                        bindings = <
   &none  &kp TAB   &kp Q &kp W &kp E &kp R       &none &none &none &none &none &none
   &none  &kp LSHFT &kp A &kp S &kp D &kp F       &none &none &none &none &none &none
   &none  &kp LCTRL &kp Z &kp X &kp C &kp V       &none &none &none &none &none &none
                 &kp ESC &kp LALT &kp SPACE       &to 0 &none &none
                        >;
                };
         steno_layer {
                        bindings = <
   &none  &none  &kp W &kp E &kp R &kp T          &kp U &kp I &kp O &kp P &kp Z &none
   &none  &kp Q  &kp S &kp D &kp F &kp G          &kp J &kp K &kp L &kp H &kp X &none
   &none  &none  &none &none &to 1 &to 0          &none &to 2 &none &none &none &none
                       &none &kp C &kp V          &kp N &kp M &none
                        >;
                };
        };
};