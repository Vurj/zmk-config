/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/* Behavior Settings */
&mt {
    tapping-term-ms = <160>;
    flavor = "tap-preferred";
};
&lt {
    tapping-term-ms = <160>;
    flavor = "tap-preferred";
    retro-tap;
};

/ {
    behaviors {

        // Vurj Behaviors
        ht: hold_tap{
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <160>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        ttab: t_tab{
            compatible = "zmk,behavior-mod-morph";
            label = "T_TAB";
            #binding-cells = <0>;
            bindings = <&lt 1 T>, <&kp TAB>;
            mods = <(MOD_LALT)>;                
        };
        win1: win_1{
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_1";
            #binding-cells = <0>;
            bindings = <&kp H>, <&kp F1>;
            mods = <(MOD_LGUI)>;                
        };
        win2: win_2{
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_2";
            #binding-cells = <0>;
            bindings = <&ht NON_US_HASH COMMA>, <&kp F2>;
            mods = <(MOD_LGUI)>;                
        };
        win3: win_3{
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_3";
            #binding-cells = <0>;
            bindings = <&ht EXCL DOT>, <&kp F3>;
            mods = <(MOD_LGUI)>;                
        };
        win4: win_4{
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_4";
            #binding-cells = <0>;
            bindings = <&kp N>, <&kp F4>;
            mods = <(MOD_LGUI)>;                
        };
        win5: win_5{
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_5";
            #binding-cells = <0>;
            bindings = <&mt RCTRL E>, <&kp F5>;
            mods = <(MOD_LGUI)>;                
        };
        win6: win_6{
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_6";
            #binding-cells = <0>;
            bindings = <&mt RALT I>, <&kp F6>;
            mods = <(MOD_LGUI)>;                
        };
        win7: win_7{
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_7";
            #binding-cells = <0>;
            bindings = <&kp L>, <&kp F7>;
            mods = <(MOD_LGUI)>;                
        };
        win8: win_8{
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_8";
            #binding-cells = <0>;
            bindings = <&kp U>, <&kp F8>;
            mods = <(MOD_LGUI)>;                
        };
        win9: win_9{
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_9";
            #binding-cells = <0>;
            bindings = <&kp Y>, <&kp F9>;
            mods = <(MOD_LGUI)>;                
        };
    };

    combos {
        compatible = "zmk,combos";

        #define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
          combo_##NAME { \
            bindings = <BINDINGS>; \
            key-positions = <KEYPOS>; \
            layers = <LAYERS>; \
            timeout-ms = <15>; \
          };

        /*                KEY POSITIONS

          ╭────────────────────╮ ╭────────────────────╮
          │      1   2   3   4 │ │  5   6   7   8     │
          │ 0   11  12  13  14 │ │ 15  16  17  18   9 │
          │ 10  20  21  22     │ │     23  24  25  19 │
          ╰───────────╮ 26  27 │ │ 28  29 ╭───────────╯
                      ╰────────╯ ╰────────╯            */


        /* Extra letters */
        COMBO(q, &kp Q, 1 2, 0)
        COMBO(b, &kp B, 2 3, 0)
        COMBO(j, &kp J, 6 7, 0)
        COMBO(semi, &kp SEMI, 7 8, 0)

        /* Functions */
        COMBO(tab, &kp TAB, 12 13, 0)
        COMBO(esc, &kp ESC, 11 12, 0)
        
         /* Puncuation */
        COMBO(sqt_grave, &ht GRAVE SQT, 16 17, 0)
        COMBO(dqt_at, &ht DQT AT, 17 18, 0)
        //COMBO(colons, &ht LS(SEMI) SEMI, 6 16, 0)
        //COMBO(comma_hash, &ht NON_US_HASH COMMA, 21 22, 0)
        //COMBO(period_exca, &ht EXCL DOT, 23 24, 0)

        /* Brackets */
        //COMBO(paren, &ht RPAR LPAR, 2 3, 0)
        //COMBO(brace, &ht RBRC LBRC, 1 2, 0)
        //COMBO(brack, &ht RBKT LBKT, 4 14, 0)

        /* Math */
        //COMBO(equals_under, &ht UNDER EQUAL, 6 7, 0)
        //COMBO(plus_min, &ht MINUS KP_PLUS, 7 8, 0)
        //COMBO(times_div, &ht PRCNT STAR, 5 15, 0)

        /* Symbols */
        //COMBO(and_pipe, &ht PIPE2 AMPS, 2 13, 0)
        //COMBO(money, &ht LS(N3) DLLR, 16 7, 0)
        //COMBO(slashes, &ht NON_US_BSLH FSLH, 16 23, 0)
        //COMBO(tilde_caret, &ht CARET TILDE2, 13 22, 0)

        /* Gaming */
        COMBO(gaming, &to 6, 28 29, 0)
        COMBO(game_back, &to 0, 23 24, 6)
        COMBO(game_esc, &kp ESC, 20 21, 6)
        COMBO(game_tab, &kp TAB, 14 4, 6)
        /* Fighting Game */
        COMBO(fight, &to 9, 21 22 23 24, 0)
        COMBO(fight_back, &to 0, 1 8, 9)
        /* web fishing game */
        COMBO(fish, &to 10, 4 5, 0)
        COMBO(fish_back, &to 0, 1 8, 10)
        COMBO(fish_game_esc, &kp ESC, 20 21, 10)
        COMBO(fish_game_tab, &kp TAB, 14 4, 10)
        COMBO(fish_q, &kp Q, 1 2, 10)
        COMBO(fish_b, &kp B, 2 3, 10)
        COMBO(fish_j, &kp J, 6 7, 10)
        COMBO(fish_semi, &kp SEMI, 7 8, 10)
        COMBO(fish_qt_grave, &ht GRAVE SQT, 16 17, 10)
        COMBO(fish_dqt_at, &ht DQT AT, 17 18, 10)
    };

//make N hold be mouse layer

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &mt F24 A     &kp W         &kp F         &lt 4 P       &kp G             &kp M         &kp L         &kp U         &kp Y         &mt RGUI O
             &lt 5 Z       &mt LALT R    &mt LCTRL S   &ttab         &kp V             &kp K         &kp N         &mt RCTRL E   &mt RALT I    &ht NON_US_BSLH FSLH
                           &kp X         &kp C         &kp D                           &kp H         &ht NON_US_HASH COMMA       &ht EXCL DOT
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &kp LSHFT     &lt 3 SPACE       &kp BSPC      &lt 2 ENTER
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
               
            >;
        };

        num_layer {
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp LGUI      &none         &none         &none         &none             &ht EQUAL DOT  &kp N7       &kp N8        &kp N9        &kp N0
             &none         &kp LALT      &kp LCTRL     &none         &none             &ht MINUS PLUS &kp N4       &kp N5        &kp N6        &ht PRCNT STAR
                           &none         &none         &none                                          &kp N1       &kp N2        &kp N3
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &kp DLLR      &kp LS(N3)        &kp BSPC       &kp DEL
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        nav_layer {
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp LGUI      &none         &none         &none         &none             &kp LG(LS(LEFT)) &kp PG_DN     &kp UP     &kp PG_UP     &kp END
             &none         &kp LALT      &kp LCTRL     &none         &none             &kp HOME      &kp LEFT         &kp DOWN   &kp RIGHT     &kp LA(F4)
                           &none         &none         &none                                         &kp LG(LSHIFT)   &kp C_PP   &kp F13
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &trans        &trans            &none         &none
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        sym_layer {
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &kp LBKT        &kp CARET     &kp LBRC      &kp RBRC      &none             &none         &kp EXCL     &kp AMPS      &kp PIPE2     &kp STAR
           &kp TILDE2      &kp RBKT      &kp LPAR      &kp RPAR      &none             &none         &kp EQUAL    &kp KP_PLUS   &kp KP_MINUS  &kp PRCNT
                           &kp NON_US_HASH &kp LS(N3)  &kp DLLR                                      &kp UNDER    &kp LS(COMMA) &kp LS(DOT)
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &trans        &none            &kp BSPC       &kp DEL
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        mouse_layer {
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &none         &none          &none          &none          &none          &none         &none &none   &none &none
             &none         &none          &none       &kp LCTRL      &none          &none         &none &none &none  &none
                           &none          &none          &none                                       &none          &none          &none
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                         &kp LSHFT     &none           &none  &none
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };


        btf_layer {
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &bt BT_SEL 3  &none         &none         &none         &none             &kp F11       &kp F7        &kp F8        &kp F9        &kp F12
             &none         &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR        &kp F10       &kp F4        &kp F5        &kp F6        &kp F13
                           &none         &none         &bt BT_SEL 4                                  &kp F1        &kp F2        &kp F3
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &out OUT_USB  &out OUT_BLE      &none         &none
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        game_layer {
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp LSHIFT    &kp Q         &kp W         &kp E         &kp R              &kp Y        &kp U        &kp I        &kp O        &kp P
             &kp LCTRL     &kp A         &kp S         &kp D         &kp F              &kp G        &kp H        &kp J        &kp K        &kp L
                           &kp Z         &kp X         &kp C                                         &kp B        &kp N        &kp M
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &kp LALT      &kp SPACE          &kp V    &kp ENTER
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        wm_layer {
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &none         &kp LG(LA(W)) &kp LG(LA(F)) &kp LG(LA(P)) &kp LG(LA(G))      &kp LG(LA(M)) &kp LG(LA(L))  &kp LG(LA(U))     &kp LG(LA(Y)) &kp LG(LA(O))
             &none         &mo 8         &mt LCTRL R   &kp LG(LA(T)) &kp LG(LA(V))      &kp LG(LA(K)) &kp LG(LA(N))  &kp LG(LA(E))     &kp LG(LA(I)) &kp LG(LA(FSLH))
                           &kp LG(LA(X)) &kp LG(LA(C)) &kp LG(LA(D))                                  &kp LG(LA(H))  &kp LG(LA(COMMA)) &kp LG(LA(DOT))   
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &kp LSHIFT    &kp LG(LA(SPACE))  &none         &kp LG(LA(ENTER))
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        wm_layer2 {
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &none         &none        &none           &none         &none             &none         &kp LG(LA(N7))  &kp LG(LA(N8))  &kp LG(LA(N9)) &none
             &none         &none        &none           &none         &none             &none         &kp LG(LA(N4))  &kp LG(LA(N5))  &kp LG(LA(N6)) &none
                           &none        &none           &none                                         &kp LG(LA(N1))  &kp LG(LA(N2))  &kp LG(LA(N3))   
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                        &kp LSHIFT    &none              &none         &none
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        fighting_game_layer {
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp P         &kp Q         &kp W         &kp E         &kp R              &kp T         &kp Y       &kp U        &kp I       &kp O
             &kp Z         &kp A         &kp S         &kp D         &kp F              &kp G         &kp H       &kp J        &kp K       &kp L
                           &kp X         &kp C         &kp V                                          &kp B       &kp N        &kp M
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &kp COMMA      &kp SPACE          &kp DOT        &kp ENTER
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };
        
       web_fishing {
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp A       &kp W         &kp F         &kp P          &kp G             &kp M         &kp L         &kp U         &kp Y         &kp O
             &kp Z       &kp R         &kp S         &kp T          &kp V             &kp K         &kp N         &kp E         &kp I         &kp FSLH
                           &kp X         &kp C         &kp D                          &kp H         &kp COMMA     &ht EXCL DOT
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &kp LSHFT     &lt 3 SPACE       &kp BSPC      &kp  ENTER
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
               
            >;
        };

    };
};